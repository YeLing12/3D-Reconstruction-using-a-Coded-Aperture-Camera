function codAp_import_crop_rescale(use_undistorted_images, aperture, numBlurred, filePre)
% This function imports the specified calibration images, crop images to
% the same scene of interest, and save image data in .mat file.
%
% Example usage:
%                   codAp_import_crop_rescale(true, 'coded', 10)
%
% Author: Michael Wang

% retrieve file names of desired pictures
filepath = 'Depth Generation/';
if strcmp(aperture, 'conventional')
    filepath = strcat(filepath, 'Conventional Aperture f22/');
    if use_undistorted_images
        % conventional aperture & Undistorted
        filename = strcat(filename, 'Undist_');
        filepath = strcat(filepath, 'Undistorted/*_*_*_undist.jpg');
        cropDims = [115, 120, 3312, 2140;...
                    122, 173, 3179, 2054;...
                    175, 209, 3032, 1953;...
                    366, 239, 2906, 1876;...
                    320, 245, 2799, 1818;...
                    462, 290, 2678, 1740;...
                    455, 307, 2581, 1681;...
                    561, 343, 2488, 1624;...
                    684, 355, 2409, 1567;...
                    592, 372, 2329, 1514;...
                    704, 399, 2245, 1463];
    else
        % conventional aperture & Original
        filepath = strcat(filepath, '*_*_*.jpg');
        cropDims = [123, 130, 3320, 2143;...
                    131, 184, 3186, 2056;...
                    184, 219, 3038, 1955;...
                    373, 247, 2915, 1879;...
                    328, 258, 2806, 1816;...
                    467, 298, 2687, 1742;...
                    460, 315, 2591, 1683;...
                    564, 349, 2500, 1628;...
                    686, 359, 2422, 1573;...
                    595, 377, 2340, 1518;...
                    706, 403, 2256, 1467];
    end
elseif strcmp(aperture, 'coded')
    filepath = strcat(filepath, 'Coded Aperture/');
    if use_undistorted_images
        % coded aperture & Undistorted
        filename = strcat(filename, 'Undist_');
        filepath = strcat(filepath, 'Undistorted/*_*_*_undist.jpg');
        cropDims = [17, 117, 3351, 2155;...
                    130, 171, 3201, 2065;...
                    132, 196, 3070, 1981;...
                    161, 246, 2954, 1893;...
                    443, 261, 2829, 1825;...
                    288, 290, 2724, 1761;...
                    451, 303, 2614, 1696;...
                    420, 321, 2530, 1646;...
                    652, 352, 2437, 1583;...
                    721, 371, 2360, 1529;...
                    741, 397, 2277, 1481];
    else
        % coded aperture & Original
        filepath = strcat(filepath, '*_*_*.jpg');
        cropDims = [22, 125, 3361, 2161;...
                    137, 181, 3210, 2068;...
                    140, 207, 3075, 1981;...
                    170, 256, 2958, 1895;...
                    450, 268, 2841, 1830;...
                    296, 297, 2728, 1763;...
                    454, 310, 2625, 1698;...
                    424, 328, 2537, 1648;...
                    653, 357, 2451, 1586;...
                    723, 374, 2373, 1532;...
                    741, 400, 2292, 1483];
    end
end

imageList = dir(filepath);
numImages = length(imageList);
filename = strcat(filename, 'imported_cropped_rescaled');

if numImages ~= (numBlurred + 1)
    fprintf('Number of blurred images does not match number of calibration images! \n');
    return;
end
fprintf('Images used: \n');
for i = 1:numImages
    fprintf('%s\n', imageList(i).name);
end

% load image data
originalImageData = cell(numImages, 1);
for i = 1:numImages
    originalImageData{i} = imread(imageList(i).name);
end

% convert rgb values to gray and from uint8 to double
grayImageData = cell(numImages, 1);
for i = 1:numImages
    grayImageData{i} = im2double(rgb2gray(originalImageData{i}));
end

% crop images [xmin ymin width height]
croppedImageData = cell(numImages, 1);
for i = 1:numImages
    croppedImageData{i} = imcrop(grayImageData{i}, cropDims(i, :));
end

% resize images to the same dimension of the smallest image [MROWS NCOLS]
[r, c] = size(croppedImageData{end});
resizedImageData = cell(numImages, 1);
for i = 1:numImages
    resizedImageData{i} = imresize(croppedImageData{i}, [r, c]);
end

% save image data into .mat file
save(strcat(filePre, '_imported_cropped_rescaled'), 'resizedImageData', 'imageList');
end